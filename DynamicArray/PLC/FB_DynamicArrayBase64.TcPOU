<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_DynamicArray" Id="{1195ebad-f841-400e-9a73-9ed4923ff5ec}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
{attribute 'hide_all_locals'}
FUNCTION_BLOCK FB_DynamicArray
VAR
	buffer : FB_JsonDynDomParser;
	root : sJsonValue;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Private" Id="{49466fda-f5e0-4ad7-b43a-0352687a0c9c}" />
    <Property Name="_Array" Id="{7d52bff1-ae95-47c5-a3a6-f6a3c9ae2414}" FolderPath="Private\">
      <Declaration><![CDATA[PROPERTY PRIVATE _Array : sJsonValue]]></Declaration>
      <Get Name="Get" Id="{9b7aeaa8-6d0e-42e1-979f-220b44e2b3f8}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IF root <> 0 THEN
	_Array := root;
ELSE
	root := buffer.NewDocument();
	_Array := buffer.SetArray(root,0);
END_IF

]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="AddLast" Id="{c8a7e319-c35e-429c-93ba-1476380fe1dd}">
      <Declaration><![CDATA[METHOD PUBLIC AddLast : BOOL
VAR_INPUT
	Value : ANY;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddLast := buffer.PushbackBase64Value(v:= _Array, p := Value.pValue,n := Value.diSize) <> 0;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddStringLast" Id="{aa636f09-5b04-45bc-9bba-0b69ecbe8c47}">
      <Declaration><![CDATA[METHOD PUBLIC AddStringLast : BOOL
VAR_INPUT
	Value : ANY_STRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddStringLast := buffer.PushbackBase64Value(v:= _Array, p := Value.pValue,n := TO_DINT(LEN2(Value.pValue)+ 1)) <> 0;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clear" Id="{3729fa69-f5b0-44e7-83e0-cc5cbbe6f4c8}">
      <Declaration><![CDATA[METHOD PUBLIC Clear : BOOL
VAR
	_arrayElement : SJsonAIterator;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_arrayElement := buffer.ArrayBegin(_array);
IF _arrayElement <> 0 THEN
	Clear := buffer.ClearArray(v := _array,i := _arrayElement);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="CopyArrayString" Id="{9aea8499-b935-4a78-9cc9-344b7bef6e5c}">
      <Declaration><![CDATA[METHOD PUBLIC CopyArrayString : BOOL
VAR_IN_OUT CONSTANT
  	pDoc : STRING; 
END_VAR
VAR_INPUT
	nDoc : UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[CopyArrayString := buffer.copyjson(v:= _Array, pDoc:= pDoc,nDoc := nDoc) <> 0;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Count" Id="{cb41e7a9-313d-4b1e-bf36-f46b8963868e}">
      <Declaration><![CDATA[PROPERTY PUBLIC Count : UDINT]]></Declaration>
      <Get Name="Get" Id="{dcbd6a1c-3944-46e8-9299-a1af2bca0c96}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Count := buffer.GetArraySize(_array);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="FirstIndex" Id="{9a033c19-af18-451c-b0af-245999fa4197}">
      <Declaration><![CDATA[PROPERTY PUBLIC FirstIndex : UDINT]]></Declaration>
      <Get Name="Get" Id="{63187c88-c9ec-4da2-a631-3e9d6cd8d435}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[FirstIndex := 0;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="LastIndex" Id="{edb01bc9-cfe2-4196-b5ac-84b13bdcb4b5}">
      <Declaration><![CDATA[PROPERTY PUBLIC LastIndex : UDINT]]></Declaration>
      <Get Name="Get" Id="{e7a0207e-d433-4a9e-aa23-7a581f253aa9}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IF Count = 0 THEN
	LastIndex := 0;
ELSE 
	LastIndex := Count - 1;
END_IF]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="RemoveFirst" Id="{7e0230e0-0608-417f-95e6-f49abdba3f67}">
      <Declaration><![CDATA[METHOD PUBLIC RemoveFirst : BOOL
VAR
	_arrayElement : SJsonAIterator;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[RemoveFirst := TryDeleteIndex(0);]]></ST>
      </Implementation>
    </Method>
    <Method Name="RemoveLast" Id="{27237050-c8a0-43fa-8f3d-0f08d2838c8c}">
      <Declaration><![CDATA[METHOD PUBLIC RemoveLast: BOOL
VAR
	_arrayElement : SJsonAIterator;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[RemoveLast := TryDeleteIndex(LastIndex);]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryDeleteIndex" Id="{7cd6dc9a-7bd8-4ed1-ba00-31d671654630}">
      <Declaration><![CDATA[METHOD PUBLIC TryDeleteIndex : BOOL
VAR_INPUT
	Index : UDINT;
END_VAR
VAR
	_arrayElement : SJsonAIterator;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_arrayElement := buffer.GetArrayValueByIdx(_Array, Index);
IF _arrayElement <> 0 THEN
	TryDeleteIndex := buffer.RemoveArray(v := _array,i := _arrayElement);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetIndex" Id="{00128fb3-0888-4680-baae-fe94bc38c29b}">
      <Declaration><![CDATA[METHOD PUBLIC TryGetIndex : BOOL;
VAR_INPUT
	Index : UDINT;
	Destination : ANY;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TryGetIndex := buffer.GetBase64(v:=  buffer.GetArrayValueByIdx(_Array, Index),p := Destination.pValue, n:= Destination.diSize) <> 0;]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetIndexTo" Id="{1412ae45-9668-4dda-b44d-6048d41a0a8b}">
      <Declaration><![CDATA[METHOD PUBLIC TryGetIndexTo : BOOL;
VAR_INPUT
	Index : UDINT;
	Destination : PVOID;
	DestinationSize : UDINT;
END_VAR
VAR
	_arrayElement : SJsonAIterator;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_arrayElement := buffer.GetArrayValueByIdx(_Array, Index);
IF _arrayElement <> 0 THEN
	TryGetIndexTo := buffer.GetBase64(v:= _arrayElement,p := Destination, n:= TO_DINT(DestinationSize)) <> 0;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="TrySetIndex" Id="{5ccebf41-1520-4351-9dd1-6cb87d270b62}">
      <Declaration><![CDATA[METHOD PUBLIC TrySetIndex : BOOL
VAR_INPUT
	Index : UDINT;
	Value : ANY;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TrySetIndex := buffer.SetBase64(v:= buffer.GetArrayValueByIdx(_Array, Index),p := Value.pValue, n:= Value.diSize) <> 0;]]></ST>
      </Implementation>
    </Method>
    <Method Name="TrySetIndexTo" Id="{5b14ca33-060c-429e-8e33-05638c5831c8}">
      <Declaration><![CDATA[METHOD PUBLIC TrySetIndexTo : BOOL
VAR_INPUT
	Index : UDINT;
	Value : PVOID;
	ValueSize : UDINT;
END_VAR
VAR
	_arrayElement : SJsonAIterator;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_arrayElement := buffer.GetArrayValueByIdx(_Array, Index);
IF _arrayElement <> 0 THEN
	TrySetIndexTo := buffer.SetBase64(v:= _arrayElement,p := Value, n:= TO_DINT(ValueSize)) <> 0;
END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>